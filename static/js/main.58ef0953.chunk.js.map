{"version":3,"sources":["components/typewriter/index.js","components/StyledComponents.js","components/forms/styles.js","components/forms/InputForm.js","components/forms/SelectForm.js","messages.js","App.js","serviceWorker.js","index.js"],"names":["Typewriter","text","onComplete","onInit","typewriter","typeString","start","callFunction","options","devMode","delay","cursor","Container","styled","div","Page","Title","h1","MessagesBlock","MessagesList","ItemMessage","props","left","css","right","Footer","Button","button","ListOptions","CircleOption","active","OptionItem","Input","input","InputFormRoot","form","BooleanFormRoot","labels","name","email","phone","document","partner","employee","InputForm","label","confirmAction","useState","value","setValue","inputRef","useRef","useEffect","current","focus","onSubmit","ref","placeholder","onChange","e","target","disabled","onClick","SelectForm","optionSelected","id","_MESSAGES","type","message","wait","createMessage","variable","cnpj","priority","size","compusory","App","messages","setMessages","currentyIndex","setCurrentyIndex","activeInput","setActiveInput","showForm","setShowForm","setForm","setOptionSelected","messagesRef","console","log","insertMessage","scrollIntoView","push","className","map","item","index","key","setTimeout","option","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.58ef0953.chunk.js","sourcesContent":["import React from \"react\";\nimport TypewriterComponent from \"typewriter-effect\";\n\nconst Typewriter = ({ text, onComplete }) => {\n  return (\n    <TypewriterComponent\n      onInit={(typewriter) => {\n        typewriter.typeString(text).start().callFunction(onComplete);\n      }}\n      options={{\n        devMode: false,\n        delay: 10,\n        cursor: null,\n      }}\n    />\n  );\n};\n\nexport default Typewriter;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  justify-content: center;\n  display: grid;\n  grid-template-columns: 700px;\n  align-items: center;\n`;\n\nexport const Page = styled.div`\n  display: grid;\n  height: 70vh;\n  border-radius: 6px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  align-content: start;\n  grid-template-rows: auto 1fr 80px;\n  align-items: start;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h1`\n  margin: 20px 0 20px;\n  font-size: 24px;\n  color: #666;\n  text-align: center;\n`;\n\nexport const MessagesBlock = styled.div`\n  overflow: auto;\n  max-height: 100%;\n`;\n\nexport const MessagesList = styled.div`\n  display: grid;\n  grid-row-gap: 8px;\n  justify-items: start;\n  padding: 15px 20px;\n  margin-bottom: 45px;\n`;\n\nexport const ItemMessage = styled.div`\n  background-color: #eeeeee;\n  padding: 12px 15px 10px 10px;\n  border-radius: 0 5px 5px;\n  max-width: 70%;\n  position: relative;\n\n  font-size: 14px;\n  color: #666;\n\n  ${(props) =>\n    props.left &&\n    css`\n      &:before {\n        content: \"\";\n        width: 0;\n        height: 0;\n        border-style: solid;\n        border-width: 0 10px 10px 0;\n        border-color: transparent #eeeeee transparent transparent;\n        position: absolute;\n        top: 0;\n        left: -9px;\n      }\n    `};\n\n  ${(props) =>\n    props.right &&\n    css`\n      background-color: #fff700;\n      justify-self: end;\n      border-radius: 5px 0px 5px 5px;\n\n      &:after {\n        content: \"\";\n        width: 0;\n        height: 0;\n        border-style: solid;\n        border-width: 0 10px 10px 0;\n        border-color: transparent #fff700 transparent transparent;\n        position: absolute;\n        top: 0;\n        right: -9px;\n        transform: rotate(-90deg);\n      }\n    `}\n`;\n\nexport const Footer = styled.div`\n  display: grid;\n  align-items: center;\n  background-color: #eeeeee;\n  height: 50px;\n  padding: 15px 10px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  padding: 10px 40px;\n  border-radius: 30px;\n  background-color: rgb(176, 177, 189);\n  cursor: pointer;\n`;\n\nexport const ListOptions = styled.div`\n  display: grid;\n  grid-row-gap: 10px;\n  padding: 30px 25px;\n`;\n\nexport const CircleOption = styled.div`\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  border: solid 1px #666;\n\n  ${(props) =>\n    props.active &&\n    css`\n      background-color: #666;\n      border-color: transparent;\n    `}\n`;\n\nexport const OptionItem = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 25px;\n  align-items: center;\n\n  background-color: #eeeeee;\n  padding: 15px 10px;\n  transition: background-color 0.5s ease;\n  border-radius: 5px;\n  color: #666;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #dedede;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  border: none;\n  padding: 10px 5px;\n  color: #2e2d33;\n  font-size: 20px;\n  letter-spacing: 0;\n  font-weight: 400;\n  background-color: #eeeeee;\n  outline: none;\n`;\n\nexport const InputFormRoot = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-column-gap: 30px;\n  align-items: center;\n`;\n\nexport const BooleanFormRoot = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-column-gap: 30px;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Input, InputFormRoot } from \"./styles\";\nimport { Button } from \"../StyledComponents\";\n\nconst labels = {\n  name: \"Informe seu nome\",\n  email: \"Informe seu email\",\n  phone: \"Informe seu celular\",\n  document: \"Informe seu CNPJ\",\n  partner: \"Informe a quantidade de sócios\",\n  employee: \"Informe a quantidade de funcionários\",\n};\n\nconst InputForm = ({ label, confirmAction }) => {\n  const [value, setValue] = useState();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  return (\n    <InputFormRoot onSubmit={() => confirmAction(value)}>\n      <Input\n        ref={inputRef}\n        placeholder={labels[label]}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n\n      <Button disabled={!value} onClick={() => confirmAction(value)}>\n        Ok\n      </Button>\n    </InputFormRoot>\n  );\n};\n\nexport default InputForm;\n","import React from \"react\";\nimport { BooleanFormRoot } from \"./styles\";\nimport { Button } from \"../StyledComponents\";\n\nconst SelectForm = ({ confirmAction, optionSelected = {} }) => {\n  return (\n    <BooleanFormRoot>\n      <Button\n        disabled={!optionSelected.id}\n        onClick={() => confirmAction(optionSelected.id)}\n      >\n        CONTINUAR\n      </Button>\n    </BooleanFormRoot>\n  );\n};\n\nexport default SelectForm;\n","import BooleanForm from \"./components/forms/BooleanForm\";\nimport InputForm from \"./components/forms/InputForm\";\nimport SelectForm from \"./components/forms/SelectForm\";\n\nexport const _MESSAGES = [\n  { type: \"system\", message: \"Olá, tudo bem?\" },\n  {\n    type: \"system\",\n    message:\n      \"Meu nome é Juliana e vou ajudar você a encontrar o plano de saúde ideal para a sua empresa. Para isso, preciso de algumas informações.\",\n  },\n  { type: \"system\", message: \"Primeiro, como posso te chamar?\", wait: true },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (name) => `Meu nome é ${name}`,\n    variable: \"name\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message: \"\",\n    createMessage: (name) =>\n      `Estamos realmente empolgados por ter você aqui, ${name}.`,\n    variable: \"name\",\n  },\n  {\n    type: \"system\",\n    message:\n      \"Precisamos de algumas informações de cadastro. Mais não se preocupe pois só entraremos em contato caso você nos autorize.\",\n  },\n  {\n    type: \"system\",\n    message: \"Qual o seu email?\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (email) => `Meu email é ${email}`,\n    variable: \"email\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message: \"Ótimo. Agora, qual o seu telefone celular?\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (phone) => `Meu telefone celular é ${phone}`,\n    variable: \"phone\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message:\n      \"Excelente. Como você sabe, a benefy só trabalha com planos de saúde empresariais, então precisamos do número do CNPJ da sua empresa.\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (cnpj) => `O CNPJ da minha empresa é ${cnpj}`,\n    variable: \"document\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message:\n      \"OK! Só para você saber, todas as informações de valores dos planos estarão baseadas na localidade do seu CNPJ pois as tabelas de preços das operadoras são diferentes para cada município.\",\n  },\n  {\n    type: \"system\",\n    message:\n      \"Vamos falar agora sobre o tipo de plano de saúde que você está buscando.\",\n  },\n  {\n    type: \"system\",\n    message: \"Qual a prioridade da Rede Credenciada?\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (priority) => `${priority} prioridade de Rede Credenciada`,\n    variable: \"priority\",\n    form: SelectForm,\n    options: [\n      {\n        id: \"Baixa\",\n        value: \"Baixa - rede credenciada limitada de hospitais e laboratórios.\",\n      },\n      {\n        id: \"Média\",\n        value:\n          \"Média - boa rede credenciada de hospitais e laboratórios como Oswaldo Cruz, Nove de Julho, HCor, São Luis, Copa D’or, Rio D’or entre outros.\",\n      },\n      {\n        id: \"Alta\",\n        value:\n          \"Alta - conta os melhores hospitais e laboratórios como Albert Einstein, Sírio-Libanês, Copa D’or Star, Samaritano, Fleury, entre outros.\",\n      },\n    ],\n  },\n  {\n    type: \"system\",\n    message: \"\",\n    createMessage: (name) => `Ótimo ${name}, estamos quase lá!`,\n    variable: \"name\",\n  },\n  {\n    type: \"system\",\n    message: \"Quantos sócios a sua empresa possui?\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (size) => `${size} Sócios`,\n    variable: \"partner\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message: \"Agora, quantos funcionários a sua empresa possui?\",\n    wait: true,\n  },\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (size) => `${size} Funcionários`,\n    variable: \"employee\",\n    form: InputForm,\n  },\n  {\n    type: \"system\",\n    message: \"Excelente, agora, só falta mais um passo para finalizarmos.\",\n  },\n  {\n    type: \"system\",\n    message:\n      \"Existem 2 categorias de contratações de planos de saúde: compulsória e livre adesão. Qual categoria se encaixa na sua necessidade?\",\n    wait: true,\n  },\n\n  {\n    type: \"user\",\n    message: \"\",\n    createMessage: (compusory) => `${compusory}`,\n    variable: \"compusory\",\n    form: SelectForm,\n    options: [\n      {\n        id: \"Compulsória\",\n        value:\n          \"Compulsória - Todos os sócios e funcionários devem obrigatoriamente aderir. Ou seja, se entrar um novo sócio ou funcionário na empresa, ele(a) deve ser incluído automaticamente no plano.\",\n      },\n      {\n        id: \"Livre Adesão\",\n        value:\n          \"Livre Adesão - nesta categoria, tanto os sócios e/ ou funcionários podem optar por aderir ou não ao plano de saúde.\",\n      },\n    ],\n  },\n  {\n    type: \"system\",\n    message:\n      \"Pronto! Já selecionamos os planos que melhor se encaixam no seu perfil.\",\n  },\n];\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Typewriter from \"./components/typewriter\";\nimport {\n  Container,\n  Page,\n  Title,\n  MessagesList,\n  ItemMessage,\n  Footer,\n  MessagesBlock,\n  ListOptions,\n  OptionItem,\n  CircleOption,\n} from \"./components/StyledComponents\";\nimport { _MESSAGES } from \"./messages\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [currentyIndex, setCurrentyIndex] = useState();\n  const [activeInput, setActiveInput] = useState();\n  const [showForm, setShowForm] = useState(false);\n  const [form, setForm] = useState({});\n\n  const [optionSelected, setOptionSelected] = useState({});\n\n  const messagesRef = useRef();\n\n  useEffect(() => {\n    setCurrentyIndex(0);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"App -> form\", form);\n  }, [form]);\n\n  useEffect(() => {\n    setShowForm(!!activeInput);\n  }, [activeInput]);\n\n  useEffect(() => {\n    insertMessage({ ..._MESSAGES[currentyIndex] });\n  }, [currentyIndex]);\n\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollIntoView(true);\n    }\n  }, [messages]);\n\n  const insertMessage = (message) => {\n    if (message.message || message.createMessage) {\n      messages.push(message);\n      setMessages([...messages]);\n    }\n  };\n\n  const onComplete = (item) => {\n    if (item.wait) {\n      return setTimeout(() => {\n        setActiveInput({ ..._MESSAGES[currentyIndex + 1] });\n      }, 500);\n    }\n\n    return setCurrentyIndex(currentyIndex + 1);\n  };\n\n  const setValueInput = (value) => {\n    insertMessage(activeInput);\n    setActiveInput(null);\n    setForm({ ...form, [activeInput.variable]: value });\n    setCurrentyIndex(currentyIndex + 2);\n  };\n\n  return (\n    <Container className=\"App\">\n      <Page>\n        <Title>Chat</Title>\n\n        <MessagesBlock>\n          <MessagesList>\n            {messages.map((item, index) => {\n              if (item.createMessage && item.variable) {\n                item.message = item.createMessage(form[item.variable]);\n              }\n\n              if (item.type === \"user\") {\n                return (\n                  <ItemMessage right key={index} ref={messagesRef}>\n                    {item.message}\n                  </ItemMessage>\n                );\n              }\n\n              return (\n                <ItemMessage left key={index} ref={messagesRef}>\n                  <Typewriter\n                    text={item.message}\n                    onComplete={() => onComplete(item)}\n                  />\n                </ItemMessage>\n              );\n            })}\n\n            {showForm && activeInput && activeInput.options && (\n              <ListOptions>\n                {activeInput.options.map((option, index) => (\n                  <OptionItem\n                    key={index}\n                    ref={messagesRef}\n                    onClick={() => setOptionSelected(option)}\n                  >\n                    <CircleOption active={optionSelected.id === option.id} />\n                    <span>{option.value}</span>\n                  </OptionItem>\n                ))}\n              </ListOptions>\n            )}\n          </MessagesList>\n        </MessagesBlock>\n\n        {showForm && activeInput && (\n          <Footer>\n            <activeInput.form\n              confirmAction={setValueInput}\n              label={activeInput.variable}\n              optionSelected={optionSelected}\n            />\n          </Footer>\n        )}\n      </Page>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}